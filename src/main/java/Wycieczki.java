/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
//package oferty;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Kamil
 */
public class Wycieczki extends javax.swing.JFrame {
    //nowe
    public static String adminName = "";
    public static List<String> data = new ArrayList<>();
    public static int listDataLength = 0;
    private static TableRowSorter<TableModel> rowSorter;
    public static int tripIDToRemove = 0;
    private static final String cityPattern = "^[A-Za-z\\p{L}\\s]+$";
    private static final Pattern compiledCityPattern = Pattern.compile(cityPattern);
    public static int id = 0;
    public static String country = "";
    public static String city = "";
    public static String price = "";
    public static String peopleLimit = "";
    /**
     * Creates new form Wycieczki
     */
    public Wycieczki() {
        initComponents();
        //nowe
        generateData();
        populateTable();
        searchTrips();
        getContentPane().setBackground(new Color(215,198,151));
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new Color(151,123,92));
        for (int i = 0; i < tripsTable.getModel().getColumnCount(); i++) {
                tripsTable.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                try {
                    data.clear();
                    Client.operate("logOut");
                    dispose();
                }
                catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex, "Informacja", JOptionPane.INFORMATION_MESSAGE);
                    //new Logs("[ " + new java.util.Date() + " ] " + ex.getMessage(), "EkranGlownyAdmin", "error");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPanel1 = new javax.swing.JPanel();
        adminPanel1 = new javax.swing.JPanel();
        adminIconLabel1 = new javax.swing.JLabel();
        adminNameLabel1 = new javax.swing.JLabel();
        adminLabel1 = new javax.swing.JLabel();
        optionsPanel1 = new javax.swing.JPanel();
        panelButton1 = new javax.swing.JButton();
        clientsButton1 = new javax.swing.JButton();
        tripsButton1 = new javax.swing.JButton();
        reservationsButton1 = new javax.swing.JButton();
        databaseButton1 = new javax.swing.JButton();
        topPanel = new javax.swing.JPanel();
        logOutButton = new javax.swing.JButton();
        searchTripLabel = new javax.swing.JLabel();
        searchClientTextField = new javax.swing.JTextField();
        wrongTripLabel = new javax.swing.JLabel();
        addTripButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tripsTable = new javax.swing.JTable();
        deleteTripButton = new javax.swing.JButton();
        editTripButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wycieczki");
        setMaximumSize(new java.awt.Dimension(1040, 770));
        setMinimumSize(new java.awt.Dimension(1040, 770));

        menuPanel1.setBackground(new java.awt.Color(118, 98, 75));
        menuPanel1.setPreferredSize(new java.awt.Dimension(180, 806));

        adminPanel1.setBackground(new java.awt.Color(118, 98, 75));

        adminIconLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/adminLOGO.png"))); // NOI18N

        adminNameLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        adminNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adminNameLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminNameLabel1.setPreferredSize(new java.awt.Dimension(73, 25));

        adminLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        adminLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adminLabel1.setText("Admin");

        javax.swing.GroupLayout adminPanel1Layout = new javax.swing.GroupLayout(adminPanel1);
        adminPanel1.setLayout(adminPanel1Layout);
        adminPanel1Layout.setHorizontalGroup(
            adminPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminNameLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
            .addComponent(adminLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(adminIconLabel1)
                .addGap(54, 54, 54))
        );
        adminPanel1Layout.setVerticalGroup(
            adminPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(adminIconLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(adminLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        optionsPanel1.setBackground(new java.awt.Color(151, 123, 92));
        optionsPanel1.setMinimumSize(new java.awt.Dimension(180, 200));
        optionsPanel1.setPreferredSize(new java.awt.Dimension(180, 230));

        panelButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        panelButton1.setText("    Panel");
        panelButton1.setBorder(null);
        panelButton1.setContentAreaFilled(false);
        panelButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        panelButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        //nowe
        Color hoverColor = new Color(190, 190, 192);
        panelButton1.getModel().addChangeListener(e -> {
            ButtonModel model = (ButtonModel) e.getSource();
            if(model.isRollover()) {
                panelButton1.setForeground(hoverColor);
                panelButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            else
                panelButton1.setForeground(null);
        });
        panelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panelButtonActionPerformed(evt);
            }
        });

        clientsButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        clientsButton1.setText("    Klienci");
        clientsButton1.setBorder(null);
        clientsButton1.setContentAreaFilled(false);
        clientsButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clientsButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        clientsButton1.setPreferredSize(new java.awt.Dimension(75, 46));
        //nowe
        clientsButton1.getModel().addChangeListener(e -> {
            ButtonModel model = (ButtonModel) e.getSource();
            if(model.isRollover()) {
                clientsButton1.setForeground(hoverColor);
                clientsButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            else
                clientsButton1.setForeground(null);
        });
        clientsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientsButtonActionPerformed(evt);
            }
        });

        tripsButton1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        tripsButton1.setText("   Wycieczki");
        tripsButton1.setActionCommand(" Wycieczki");
        tripsButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tripsButton1.setContentAreaFilled(false);
        tripsButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tripsButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        tripsButton1.setPreferredSize(new java.awt.Dimension(75, 46));
        //nowe
        tripsButton1.getModel().addChangeListener(e -> {
            ButtonModel model = (ButtonModel) e.getSource();
            if(model.isRollover()) {
                tripsButton1.setForeground(hoverColor);
                tripsButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            else
                tripsButton1.setForeground(null);
        });

        reservationsButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        reservationsButton1.setText("Rezerwacje");
        reservationsButton1.setContentAreaFilled(false);
        reservationsButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reservationsButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reservationsButton1.setPreferredSize(new java.awt.Dimension(75, 46));
        //nowe
        reservationsButton1.getModel().addChangeListener(e -> {
            ButtonModel model = (ButtonModel) e.getSource();
            if(model.isRollover()) {
                reservationsButton1.setForeground(hoverColor);
                reservationsButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            else
                reservationsButton1.setForeground(null);
        });
        reservationsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationsButtonActionPerformed(evt);
            }
        });

        databaseButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        databaseButton1.setText("Baza danych");
        databaseButton1.setContentAreaFilled(false);
        databaseButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        databaseButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        databaseButton1.setPreferredSize(new java.awt.Dimension(75, 46));
        //nowe
        databaseButton1.getModel().addChangeListener(e -> {
            ButtonModel model = (ButtonModel) e.getSource();
            if(model.isRollover()) {
                databaseButton1.setForeground(hoverColor);
                databaseButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            else
                databaseButton1.setForeground(null);
        });
        databaseButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databaseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsPanel1Layout = new javax.swing.GroupLayout(optionsPanel1);
        optionsPanel1.setLayout(optionsPanel1Layout);
        optionsPanel1Layout.setHorizontalGroup(
            optionsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(clientsButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
            .addComponent(tripsButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(reservationsButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(databaseButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        optionsPanel1Layout.setVerticalGroup(
            optionsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanel1Layout.createSequentialGroup()
                .addComponent(panelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(clientsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(tripsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(reservationsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(databaseButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout menuPanel1Layout = new javax.swing.GroupLayout(menuPanel1);
        menuPanel1.setLayout(menuPanel1Layout);
        menuPanel1Layout.setHorizontalGroup(
            menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(optionsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuPanel1Layout.setVerticalGroup(
            menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel1Layout.createSequentialGroup()
                .addComponent(adminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(optionsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(284, Short.MAX_VALUE))
        );

        topPanel.setBackground(new java.awt.Color(151, 123, 92));
        topPanel.setPreferredSize(new java.awt.Dimension(205, 34));

        logOutButton.setBackground(new java.awt.Color(242, 242, 242));
        logOutButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Wyloguj");
        logOutButton.setContentAreaFilled(false);
        logOutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logOutButton.setPreferredSize(new java.awt.Dimension(74, 34));
        //nowe
        logOutButton.getModel().addChangeListener(e -> {
            ButtonModel model = (ButtonModel) e.getSource();
            if(model.isRollover()) {
                logOutButton.setForeground(Color.lightGray);
                logOutButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            else
                logOutButton.setForeground(Color.white);
        });
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addContainerGap(753, Short.MAX_VALUE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchTripLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        searchTripLabel.setText("Wyszukaj wycieczkę po mieście");

        searchClientTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientTextFieldActionPerformed(evt);
            }
        });

        wrongTripLabel.setForeground(new java.awt.Color(255, 0, 0));
        wrongTripLabel.setPreferredSize(new java.awt.Dimension(222, 16));

        addTripButton.setBackground(new java.awt.Color(241, 227, 185));
        addTripButton.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        addTripButton.setText("+ Dodaj Wycieczkę");
        addTripButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTripButtonActionPerformed(evt);
            }
        });

        tripsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Kraj", "Miasto", "Cena/Osoba", "Limit osób"
            }
        )//nowe
        {public boolean isCellEditable(int row, int column){
            if(column == 0)
                return false;
            else
                return true;}});
        tripsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tripsTable.setMaximumSize(new java.awt.Dimension(375, 550));
        tripsTable.setMinimumSize(new java.awt.Dimension(375, 550));
        tripsTable.setPreferredSize(new java.awt.Dimension(375, 550));
        tripsTable.setSelectionBackground(new java.awt.Color(202, 186, 143));
        jScrollPane1.setViewportView(tripsTable);

        deleteTripButton.setBackground(new java.awt.Color(241, 227, 185));
        deleteTripButton.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        deleteTripButton.setText("Usuń Wycieczkę");
        deleteTripButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTripButtonActionPerformed(evt);
            }
        });

        editTripButton.setBackground(new java.awt.Color(241, 227, 185));
        editTripButton.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        editTripButton.setText("Edytuj Wycieczkę");
        editTripButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        //nowe
        editTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTripButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchTripLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(searchClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(wrongTripLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(320, 320, 320)
                                        .addComponent(addTripButton)
                                        .addGap(21, 21, 21))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(deleteTripButton)
                        .addGap(35, 35, 35)
                        .addComponent(editTripButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchTripLabel)
                        .addGap(0, 0, 0)
                        .addComponent(searchClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(wrongTripLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addTripButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteTripButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editTripButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editTripButtonActionPerformed(ActionEvent evt) {
        DefaultTableModel model = (DefaultTableModel) tripsTable.getModel();
        int row = tripsTable.getSelectedRow();
        if(row == -1)
            JOptionPane.showMessageDialog(null, "Nie wybrano żadnej wycieczki.", "Informacja", JOptionPane.ERROR_MESSAGE);
        else {
            id = Integer.parseInt(model.getValueAt(row, 0).toString());
            country = model.getValueAt(row, 1).toString();
            city = model.getValueAt(row, 2).toString();
            price = model.getValueAt(row, 3).toString();
            peopleLimit = model.getValueAt(row, 4).toString();
            //System.out.println(id + " " + firstName + " " + lastName + " " + email + " " + phoneNumber);
            if (country.equals("") || city.equals("") || price.equals("") || peopleLimit.equals("")) {
                JOptionPane.showMessageDialog(this, "Wprowadzono puste dane!", "Błąd", JOptionPane.ERROR_MESSAGE);
            } else {
                Client.operate("editTrip");
            }
        }
    }

    //nowe
    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        dispose();
        data.clear();
        StartPageFrame.admin_logged = false;
        Client.operate("logOut");
        new StartPageFrame().setVisible(true);
    }
    //nowe
    private void generateData(){
        Client.operate("tripsUpdate");
        adminNameLabel1.setText(Dashboard.adminName);
    }
    //nowe
    private void populateTable(){
        int counter = 0;
        int size = (listDataLength/5);
        DefaultTableModel model = (DefaultTableModel) tripsTable.getModel();
        for(int i=0; i<size; i++){
            model.addRow(new Object[]{data.get(counter), data.get(counter+1), data.get(counter+2), data.get(counter+3),
                    data.get(counter+4)});
            if(size > 1)
                counter+=5;
        }
    }
    //nowe
    private void checkCityValidation(){
        if(!compiledCityPattern.matcher(searchClientTextField.getText()).matches())
            wrongTripLabel.setText("Sprawdź czy podane miasto jest poprawne.");
        else
            wrongTripLabel.setText("");
        if(searchClientTextField.getText().isEmpty())
            wrongTripLabel.setText("");
    }
    //nowe
    private void searchTrips(){
        //clientsTable.setDefaultEditor(Object.class, null);
        tripsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        rowSorter = new TableRowSorter<>(tripsTable.getModel());
        tripsTable.setRowSorter(rowSorter);
        searchClientTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkCityValidation();
                String text = searchClientTextField.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?s)" + text, 2));
                }
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                checkCityValidation();
                String text = searchClientTextField.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?s)" + text));
                }
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                checkCityValidation();
                throw new UnsupportedOperationException("Unsupported event!");
            }
        });
    }
    private void searchClientTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchClientTextFieldActionPerformed

    private void deleteTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTripButtonActionPerformed
        // TODO add your handling code here:
        //nowe
        DefaultTableModel model = (DefaultTableModel) tripsTable.getModel();
        int row = tripsTable.getSelectedRow();
        if(row == -1)
            JOptionPane.showMessageDialog(null, "Nie wybrano żadnej wycieczki.", "Informacja", JOptionPane.ERROR_MESSAGE);
        else {tripIDToRemove = Integer.parseInt(model.getValueAt(row, 0).toString());
            model.removeRow(row);
            Client.operate("deleteTrip");
        }
    }//GEN-LAST:event_deleteTripButtonActionPerformed

    private void addTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTripButtonActionPerformed
        // TODO add your handling code here:
        //nowe
        dispose();
        data.clear();
        new Dodaj_wycieczke().setVisible(true);
    }//GEN-LAST:event_addTripButtonActionPerformed
    //nowe
    private void clientsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        dispose();
        data.clear();
        new Clients().setVisible(true);
    }
    //nowe
    private void databaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        dispose();
        data.clear();
        new DatabasePanel().setVisible(true);
    }
    //nowe
    private void reservationsButtonActionPerformed(ActionEvent evt) {
        dispose();
        data.clear();
        new Rezerwacje().setVisible(true);
    }
    //nowe
    private void panelButtonActionPerformed(ActionEvent evt) {
        dispose();
        data.clear();
        new Dashboard().setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Wycieczki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Wycieczki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Wycieczki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Wycieczki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Wycieczki().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTripButton;
    private javax.swing.JLabel adminIconLabel1;
    private javax.swing.JLabel adminLabel1;
    private javax.swing.JLabel adminNameLabel1;
    private javax.swing.JPanel adminPanel1;
    private javax.swing.JButton clientsButton1;
    private javax.swing.JButton databaseButton1;
    private javax.swing.JButton deleteTripButton;
    private javax.swing.JButton editTripButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel menuPanel1;
    private javax.swing.JPanel optionsPanel1;
    private javax.swing.JButton panelButton1;
    private javax.swing.JButton reservationsButton1;
    private javax.swing.JTextField searchClientTextField;
    private javax.swing.JLabel searchTripLabel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JButton tripsButton1;
    private javax.swing.JTable tripsTable;
    private javax.swing.JLabel wrongTripLabel;
    // End of variables declaration//GEN-END:variables
}
