/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import java.awt.event.ActionEvent;

/**
 *
 * @author zuzan
 */
public class ChangePassword extends javax.swing.JFrame {

    /**
     * Creates new form ChangePassword
     */
    public ChangePassword() {
        initComponents();
        wrongPasswordLabel.setMinimumSize(new java.awt.Dimension(38, 16));
        newPasswordLabel.setMinimumSize(new java.awt.Dimension(38, 16));
        confirmPasswordLabel.setMinimumSize(new java.awt.Dimension(38, 16));
        wrongPasswordLabel.setText("");
        newPasswordLabel.setText("");
        confirmPasswordLabel.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentPassword = new javax.swing.JLabel();
        newPassword = new javax.swing.JLabel();
        confirmPassword = new javax.swing.JLabel();
        changeButton = new javax.swing.JButton();
        wrongPasswordLabel = new javax.swing.JLabel();
        newPasswordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        currentPasswordField = new javax.swing.JPasswordField();
        newPasswordField = new javax.swing.JPasswordField();
        confirmPasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Zmiana hasła");

        currentPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        currentPassword.setText("Aktualne hasło:");

        newPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newPassword.setText("Podaj nowe hasło:");

        confirmPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        confirmPassword.setText("Potwierdź nowe hasło:");

        changeButton.setBackground(new java.awt.Color(151, 123, 92));
        changeButton.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        changeButton.setForeground(new java.awt.Color(255, 255, 255));
        changeButton.setText("Zmień hasło");
        //nowe
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        wrongPasswordLabel.setForeground(new java.awt.Color(255, 0, 0));
        wrongPasswordLabel.setText("cos");

        newPasswordLabel.setForeground(new java.awt.Color(255, 0, 0));
        newPasswordLabel.setText("Minimum 8 znaków w tym jedna cyfra, wielka litera i mała litera.");

        confirmPasswordLabel.setForeground(new java.awt.Color(255, 0, 0));
        confirmPasswordLabel.setText("cos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(confirmPassword)
                            .addComponent(newPassword)
                            .addComponent(currentPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wrongPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirmPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(currentPasswordField)
                            .addComponent(newPasswordField)
                            .addComponent(confirmPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(changeButton)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentPassword)
                    .addComponent(currentPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(wrongPasswordLabel)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPassword)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(newPasswordLabel)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPassword)
                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(confirmPasswordLabel)
                .addGap(18, 18, 18)
                .addComponent(changeButton)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //nowe
    private void changeButtonActionPerformed(ActionEvent evt) {
        if(passwordIsValid()){
            boolean newPasswordCorrect = newPasswordIsValid();
            boolean confirmPasswordCorrect = confirmPasswordIsValid();
            if(newPasswordCorrect && confirmPasswordCorrect){
                ChangeClientPassword.password = new String(newPasswordField.getPassword());
                Clients.clientIDToChangePassword = Integer.parseInt(MyAccount.clientData.get(4));
                Client.operate("changeClientPassword");
                dispose();
                JOptionPane.showMessageDialog(null, "Pomyślnie zmieniono hasło.", "Informacja", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private boolean passwordIsValid(){
        if(new String(currentPasswordField.getPassword()).equals("")) {
            wrongPasswordLabel.setText("Pole jest wymagane.");
            return false;
        }
        else if(!StartPageFrame.password.equals(new String(currentPasswordField.getPassword()))){
            wrongPasswordLabel.setText("Błędne hasło.");
            return false;
        }
        else{
            wrongPasswordLabel.setText("");
            return true;
        }
    }
    private boolean newPasswordIsValid(){
        if(new String(newPasswordField.getPassword()).equals("")) {
            newPasswordLabel.setText("Pole jest wymagane.");
            return false;
        }
        else if(!StartPageFrame.compiledPasswordPattern.matcher(new String(newPasswordField.getPassword())).matches()) {
            newPasswordLabel.setText("Minimum 8 znaków w tym jedna cyfra, wielka litera i mała litera.");
            return false;
        }
        else {
            newPasswordLabel.setText("");
            return true;
        }
    }

    private boolean confirmPasswordIsValid(){
        if(!new String(newPasswordField.getPassword()).equals(new String(confirmPasswordField.getPassword()))){
            confirmPasswordLabel.setText("Hasła się nie zgadzają.");
            return false;
        }
        else {
            confirmPasswordLabel.setText("");
            return true;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changeButton;
    private javax.swing.JLabel confirmPassword;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JLabel currentPassword;
    private javax.swing.JPasswordField currentPasswordField;
    private javax.swing.JLabel newPassword;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JLabel wrongPasswordLabel;
    // End of variables declaration//GEN-END:variables
}
