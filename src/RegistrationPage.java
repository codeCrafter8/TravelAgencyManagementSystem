
import javax.swing.*;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.*;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.regex.Pattern;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author zuzan
 */
public class RegistrationPage extends javax.swing.JFrame {
    private static final String phoneNumberPattern = "^(\\+\\d{1,3}( )?)?((\\(\\d{1,3}\\))|\\d{1,3})[- .]?\\d{3,4}[- .]?\\d{4}$";
    private static final Pattern compiledPhoneNumberPattern = Pattern.compile(phoneNumberPattern);

    private static final String firstNamePattern = "[a-zA-Z-]{2,}";
    private static final Pattern compiledFirstNamePattern = Pattern.compile(firstNamePattern);

    private static final String lastNamePattern = "[a-zA-Z-']{2,}";
    private static final Pattern compiledLastNamePattern = Pattern.compile(lastNamePattern);
    public static String user_exists;
    /**
     * Creates new form RegistrationPage
     */
    public RegistrationPage() {
        initComponents();
        getContentPane().setBackground(new Color(215,198,151));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regPanel = new javax.swing.JPanel();
        createLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneNumberTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        cofirmPasswordLabel = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        submitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        TypeConfirmPasswordLabel = new javax.swing.JLabel();
        TypePasswordLabel = new javax.swing.JLabel();
        TypeEmailLabel = new javax.swing.JLabel();
        TypePhoneNumberLabel = new javax.swing.JLabel();
        TypeLastNameLabel = new javax.swing.JLabel();
        TypeFirstnameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Travel Agency - Registration");
        setPreferredSize(new java.awt.Dimension(1024, 768));

        regPanel.setBackground(new java.awt.Color(247, 233, 201));
        regPanel.setPreferredSize(new java.awt.Dimension(450, 620));

        createLabel.setFont(new java.awt.Font("Myanmar Text", 0, 24)); // NOI18N
        createLabel.setText("Utwórz konto");

        firstNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        firstNameLabel.setText("Imię");

        firstNameTextField.addFocusListener(new FocusListener() {
            public void focusGained(FocusEvent e) {}
            public void focusLost(FocusEvent e) {
                if(!e.getOppositeComponent().equals(cancelButton)) {
                    firstNameIsValid();
                }
            }
        });

        lastNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lastNameLabel.setText("Nazwisko");

        lastNameTextField.addFocusListener(new FocusListener() {
            public void focusGained(FocusEvent e) {}
            public void focusLost(FocusEvent e) {
                if(!e.getOppositeComponent().equals(cancelButton)) {
                    lastNameIsValid();
                }
            }
        });

        phoneNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        phoneNumberLabel.setText("Numer telefonu");

        phoneNumberTextField.addFocusListener(new FocusListener() {
            public void focusGained(FocusEvent e) {}
            public void focusLost(FocusEvent e) {
                if(!e.getOppositeComponent().equals(cancelButton)) {
                    phoneNumberIsValid();
                }
            }
        });

        emailLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        emailLabel.setText("E-mail");

        emailTextField.addFocusListener(new FocusListener() {
            public void focusGained(FocusEvent e) {}
            public void focusLost(FocusEvent e) {
                if(!e.getOppositeComponent().equals(cancelButton)) {
                    emailIsValid();
                }
            }
        });

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        passwordLabel.setText("Hasło");

        passwordField.addFocusListener(new FocusListener() {
            public void focusGained(FocusEvent e) {}
            public void focusLost(FocusEvent e) {
                if(!e.getOppositeComponent().equals(cancelButton)) {
                    passwordIsValid();
                }
            }
        });

        cofirmPasswordLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cofirmPasswordLabel.setText("Potwierdź hasło");

        confirmPasswordField.addFocusListener(new FocusListener() {
            public void focusGained(FocusEvent e) {}
            public void focusLost(FocusEvent e) {
                if(!e.getOppositeComponent().equals(cancelButton)) {
                    confirmPasswordIsValid();
                }
            }
        });

        submitButton.setBackground(new java.awt.Color(189, 165, 111));
        submitButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        submitButton.setText("Zarejestruj się");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(189, 165, 111));
        cancelButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cancelButton.setText("Anuluj");
        cancelButton.setPreferredSize(new java.awt.Dimension(116, 27));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        TypeConfirmPasswordLabel.setForeground(new java.awt.Color(255, 0, 0));
        TypeConfirmPasswordLabel.setMaximumSize(new java.awt.Dimension(400, 16));
        TypeConfirmPasswordLabel.setPreferredSize(new java.awt.Dimension(400, 16));

        TypePasswordLabel.setForeground(new java.awt.Color(255, 0, 0));
        TypePasswordLabel.setMaximumSize(new java.awt.Dimension(400, 16));
        TypePasswordLabel.setPreferredSize(new java.awt.Dimension(400, 16));

        TypeEmailLabel.setForeground(new java.awt.Color(255, 0, 0));
        TypeEmailLabel.setMaximumSize(new java.awt.Dimension(400, 16));
        TypeEmailLabel.setPreferredSize(new java.awt.Dimension(400, 16));

        TypePhoneNumberLabel.setForeground(new java.awt.Color(255, 0, 0));
        TypePhoneNumberLabel.setMaximumSize(new java.awt.Dimension(400, 16));
        TypePhoneNumberLabel.setPreferredSize(new java.awt.Dimension(350, 16));

        TypeLastNameLabel.setForeground(new java.awt.Color(255, 0, 0));
        TypeLastNameLabel.setMaximumSize(new java.awt.Dimension(350, 16));
        TypeLastNameLabel.setPreferredSize(new java.awt.Dimension(350, 16));

        TypeFirstnameLabel.setForeground(new java.awt.Color(255, 0, 0));
        TypeFirstnameLabel.setMaximumSize(new java.awt.Dimension(350, 16));
        TypeFirstnameLabel.setPreferredSize(new java.awt.Dimension(350, 16));

        javax.swing.GroupLayout regPanelLayout = new javax.swing.GroupLayout(regPanel);
        regPanel.setLayout(regPanelLayout);
        regPanelLayout.setHorizontalGroup(
            regPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(submitButton)
                .addGap(18, 18, 18)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, regPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(regPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TypeConfirmPasswordLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(passwordField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailTextField)
                    .addComponent(confirmPasswordField)
                    .addComponent(cofirmPasswordLabel)
                    .addComponent(passwordLabel)
                    .addComponent(emailLabel)
                    .addGroup(regPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(firstNameLabel)
                        .addComponent(firstNameTextField)
                        .addComponent(lastNameLabel)
                        .addComponent(lastNameTextField)
                        .addComponent(phoneNumberLabel)
                        .addComponent(phoneNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                        .addComponent(TypePhoneNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TypeLastNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TypeFirstnameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(TypeEmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(TypePasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, regPanelLayout.createSequentialGroup()
                .addContainerGap(153, Short.MAX_VALUE)
                .addComponent(createLabel)
                .addGap(152, 152, 152))
        );
        regPanelLayout.setVerticalGroup(
            regPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(createLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(TypeFirstnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(TypeLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(phoneNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(TypePhoneNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(TypeEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(TypePasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(cofirmPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(TypeConfirmPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(regPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(regPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(regPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void phoneNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        RegistrationPage rp =new RegistrationPage();
        StartPageFrame sp =new StartPageFrame();
        rp.setVisible(false);
        sp.setVisible(true);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private boolean firstNameIsValid(){
        if(firstNameTextField.getText().isEmpty()) {
            TypeFirstnameLabel.setText("Pole jest wymagane.");
            return false;
        }
        else if(!compiledFirstNamePattern.matcher(firstNameTextField.getText()).matches()) {
            TypeFirstnameLabel.setText("Sprawdź czy podane imię jest poprawne.");
            return false;
        }
        else {
            TypeFirstnameLabel.setText("");
            return true;
        }
    }

    private boolean lastNameIsValid(){
        if(lastNameTextField.getText().isEmpty()) {
            TypeLastNameLabel.setText("Pole jest wymagane.");
            return false;
        }
        else if(!compiledLastNamePattern.matcher(lastNameTextField.getText()).matches()) {
            TypeLastNameLabel.setText("Sprawdź czy podane nazwisko jest poprawne.");
            return false;
        }
        else {
            TypeLastNameLabel.setText("");
            return true;
        }
    }

    private boolean phoneNumberIsValid(){
        if(compiledPhoneNumberPattern.matcher(phoneNumberTextField.getText()).matches() || phoneNumberTextField.getText().isEmpty()) {
            TypePhoneNumberLabel.setText("");
            return true;
        }
        else {
            TypePhoneNumberLabel.setText("Sprawdź czy podany numer telefonu jest poprawny.");
            return false;
        }
    }

    private boolean emailIsValid(){
        if(emailTextField.getText().isEmpty()) {
            TypeEmailLabel.setText("Pole jest wymagane.");
            return false;
        }
        else if(!StartPageFrame.compiledEmailPattern.matcher(emailTextField.getText()).matches()) {
            TypeEmailLabel.setText("Sprawdź czy podany adres e-mail jest poprawny.");
            return false;
        }
        else {
            TypeEmailLabel.setText("");
            return true;
        }
    }

    private boolean passwordIsValid(){
        if(new String(passwordField.getPassword()).equals("")) {
            TypePasswordLabel.setText("Pole jest wymagane.");
            return false;
        }
        else if(!StartPageFrame.compiledPasswordPattern.matcher(new String(passwordField.getPassword())).matches()) {
            TypePasswordLabel.setText("Minimum 8 znaków w tym jedna cyfra, wielka litera i mała litera.");
            return false;
        }
        else {
            TypePasswordLabel.setText("");
            return true;
        }
    }

    private boolean confirmPasswordIsValid(){
        if(!new String(passwordField.getPassword()).equals(new String(confirmPasswordField.getPassword()))){
            TypeConfirmPasswordLabel.setText("Hasła się nie zgadzają.");
            return false;
        }
        else {
            TypeConfirmPasswordLabel.setText("");
            return true;
        }
    }

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        boolean firstNameCorrect = firstNameIsValid();
        boolean lastNameCorrect = lastNameIsValid();
        boolean phoneNumberCorrect = phoneNumberIsValid();
        boolean emailCorrect = emailIsValid();
        boolean passwordCorrect = passwordIsValid();
        boolean confirmPasswordCorrect = confirmPasswordIsValid();
        if(firstNameCorrect && lastNameCorrect && phoneNumberCorrect && emailCorrect && passwordCorrect && confirmPasswordCorrect) {
            try {
                Socket socket = new Socket("localhost", 1522);
                InputStream socket_input = socket.getInputStream();
                DataInputStream socket_input_data = new DataInputStream(socket_input);
                OutputStream socket_output = socket.getOutputStream();
                DataOutputStream socket_output_data = new DataOutputStream(socket_output);
                socket_output_data.writeUTF("Register");
                socket_output_data.writeUTF(firstNameTextField.getText());
                socket_output_data.flush();
                socket_output_data.writeUTF(lastNameTextField.getText());
                socket_output_data.flush();
                socket_output_data.writeUTF(phoneNumberTextField.getText());
                socket_output_data.flush();
                socket_output_data.writeUTF(emailTextField.getText());
                socket_output_data.flush();
                socket_output_data.writeUTF(new String(passwordField.getPassword()));
                socket_output_data.flush();
                user_exists = socket_input_data.readUTF();
                if (user_exists.equals("Tak"))
                    TypeEmailLabel.setText("Użytkownik o tym adresie e-mail już istnieje. Podaj inny.");
                socket_output_data.close();
                socket_input_data.close();
                socket.close();
            } catch (UnknownHostException e) {
                throw new RuntimeException(e);
            } catch (
                    IOException e) {
                throw new RuntimeException(e);
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TypeConfirmPasswordLabel;
    private javax.swing.JLabel TypeEmailLabel;
    private javax.swing.JLabel TypeFirstnameLabel;
    private javax.swing.JLabel TypeLastNameLabel;
    private javax.swing.JLabel TypePasswordLabel;
    private javax.swing.JLabel TypePhoneNumberLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cofirmPasswordLabel;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel createLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JPanel regPanel;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
